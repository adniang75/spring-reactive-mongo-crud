plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id 'io.freefair.lombok' version '6.5.0.2'
    id "org.sonarqube" version "3.4.0.2513"
}

group = 'com.alassaneniang'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.modelmapper:modelmapper:3.1.0'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    testImplementation 'io.projectreactor:reactor-test'
}

sonarqube {
    properties {
        property "sonar.projectKey", "adniang75_spring-reactive-mongo-crud"
        property "sonar.organization", "adniang75"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacoco {
    toolVersion = '0.8.8'
}

jacocoTestReport {
    dependsOn test
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.0
            }
        }
        rule {
            enabled = true
            element = 'CLASS'
            includes = ['com.alassaneniang.*']
            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
            }
        }
    }
}

// to run coverage verification during the build
check.dependsOn jacocoTestCoverageVerification